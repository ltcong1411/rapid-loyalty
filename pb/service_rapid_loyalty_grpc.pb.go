// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: service_rapid_loyalty.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	RapidLoyalty_CreateUser_FullMethodName = "/pb.RapidLoyalty/CreateUser"
)

// RapidLoyaltyClient is the client API for RapidLoyalty service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RapidLoyaltyClient interface {
	CreateUser(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*CreateCustomerResponse, error)
}

type rapidLoyaltyClient struct {
	cc grpc.ClientConnInterface
}

func NewRapidLoyaltyClient(cc grpc.ClientConnInterface) RapidLoyaltyClient {
	return &rapidLoyaltyClient{cc}
}

func (c *rapidLoyaltyClient) CreateUser(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*CreateCustomerResponse, error) {
	out := new(CreateCustomerResponse)
	err := c.cc.Invoke(ctx, RapidLoyalty_CreateUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RapidLoyaltyServer is the server API for RapidLoyalty service.
// All implementations must embed UnimplementedRapidLoyaltyServer
// for forward compatibility
type RapidLoyaltyServer interface {
	CreateUser(context.Context, *CreateCustomerRequest) (*CreateCustomerResponse, error)
	mustEmbedUnimplementedRapidLoyaltyServer()
}

// UnimplementedRapidLoyaltyServer must be embedded to have forward compatible implementations.
type UnimplementedRapidLoyaltyServer struct {
}

func (UnimplementedRapidLoyaltyServer) CreateUser(context.Context, *CreateCustomerRequest) (*CreateCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedRapidLoyaltyServer) mustEmbedUnimplementedRapidLoyaltyServer() {}

// UnsafeRapidLoyaltyServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RapidLoyaltyServer will
// result in compilation errors.
type UnsafeRapidLoyaltyServer interface {
	mustEmbedUnimplementedRapidLoyaltyServer()
}

func RegisterRapidLoyaltyServer(s grpc.ServiceRegistrar, srv RapidLoyaltyServer) {
	s.RegisterService(&RapidLoyalty_ServiceDesc, srv)
}

func _RapidLoyalty_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RapidLoyaltyServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RapidLoyalty_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RapidLoyaltyServer).CreateUser(ctx, req.(*CreateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RapidLoyalty_ServiceDesc is the grpc.ServiceDesc for RapidLoyalty service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RapidLoyalty_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.RapidLoyalty",
	HandlerType: (*RapidLoyaltyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _RapidLoyalty_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_rapid_loyalty.proto",
}
